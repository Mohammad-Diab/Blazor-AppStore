@page "/Browser"

<Modal @ref="ModalRef" ShowAnimation="ModalShowAnimation.BounceIn" />
<nav class="navbar navbar-expand-lg py-1 browser-navbar">
    <div class="d-flex flex-auto align-space-evenly">
        <div class="align-self-center flex-nowrap white-space-nowrap" style="flex: 0 0 140px;">
            <a class="btn btn-outline-secondary back-btn custom-btn text-secondary bg-transparent mr-2" href="./" title="Go back.">
                <span class="oi oi-arrow-circle-left"></span>
            </a>
            <span style="padding-top: 1px;" class="navbar-brand align-middle">Browser</span>
        </div>
        <div class="flex-auto overflow-hidden text-center align-self-center">
            <span class="navbar-brand mr-0 header-text">@currentItem.Name</span>
        </div>
    </div>
    <div style="flex: 0 0 208px;">
        <div class="input-group position-relative">
            <input type="text" class="form-control filter-input" placeholder="filter..." @bind="FilterText" @bind:event="oninput">
            <button @onclick="@(() => { FilterText = ""; })" type="button" class="btn bg-transparent filter-input-button" disabled="@string.IsNullOrEmpty(FilterText)">
                <span class="oi @(string.IsNullOrEmpty(FilterText) ? "oi-magnifying-glass" : "oi-x")"></span>
            </button>
        </div>
    </div>
</nav>

<div class="container mt-4">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb bg-light border-gray">
            @foreach (var item in breadcrumbList)
            {
                <BreadcrumbItem isActive="item.Id==currentItem.Id" item="item" ClickCallback="NavigateBack" />
            }
        </ol>
    </nav>
    <div class="bg-light py-4 border-gray border-radius" id="presentation">
        @if (contentList is null)
        {
            <div class="text-center">Loading...</div>
        }
        else if (contentList.Count == 0 && fullList.Count > 0)
        {
            <div class="text-center">No data match your search.</div>
        }
        else if (contentList.Count == 0)
        {
            <div class="text-center">No data to show.</div>
        }
        else
        {
            <div class="content">
                @{
                    Random rand = new Random();
                    for (int i = 0; i < contentList.Count; i++)
                    {
                        <BrowserItem ClickCallback="Navigate" item="contentList[i]" />
                    }
                    int placeholder_div = 3 - contentList.Count % 3;
                    for (int i = 0; placeholder_div < 3 && i < placeholder_div; i++)
                    {
                        <BrowserItem />
                    }
                }
            </div>
        }

    </div>
</div>